package entity;

import java.awt.Color;
import java.awt.Graphics2D;
import java.io.IOException;

import javax.imageio.ImageIO;

import main.GamePanel;
import main.KeyManager;

public class Player extends Entity{
	
	GamePanel gamePanel;
	KeyManager keyManager;
	
	public Player(GamePanel gamePanel, KeyManager keyManager) {
		this.gamePanel = gamePanel;
		this.keyManager = keyManager;
		this.setDefaultValues();
	}
	
	public void setDefaultValues() {
		x = gamePanel.screenWidth / 2 - gamePanel.tileSize / 2;
		y = gamePanel.screenHeight / 2 - gamePanel.tileSize / 2;
		speed = 4;
		direction = "front";
	}
	
	public void getPlayerImage() {
		try {
			front = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_front.png"));
			up1 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_up1.png"));
			up2 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_up2.png"));
			down1 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_down1.png"));
			down2 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_down2.png"));
			left1 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_left1.png"));
			left2 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_left2.png"));
			right1 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_right1.png"));
			right2 = ImageIO.read(getClass().getResourceAsStream("/player/girl_player_right2.png"));
			
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void update() {
		
		if(keyManager.upPressed) {
			y -= speed;
		}
		else if(keyManager.downPressed) {
			y += speed;
		}
		else if(keyManager.rightPressed) {
			x += speed;
		}
		else if(keyManager.leftPressed) {
			x -= speed;
		}
		
		
	}
	public void draw(Graphics2D g2) {
		g2.setColor(Color.white);
		g2.fillRect(x, y, gamePanel.tileSize, gamePanel.tileSize);
	} 

}
