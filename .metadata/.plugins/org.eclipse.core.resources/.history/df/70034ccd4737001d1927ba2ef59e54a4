package entity;

import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import main.GamePanel;

public class Entity {
	
	public GamePanel gamePanel;

	public Entity(GamePanel gamePanel) {
		this.gamePanel = gamePanel;
	}

	public int worldX, worldY;
	public int speed;
	
	public BufferedImage front, back, up1, up2, down1, down2, left1, left2, right1, right2;
	public String direction;
	
	public int spriteCounter = 0;
	public int spriteNum = 1;
	
	public Rectangle solidArea;
	public int solidAreaDefaultX, solidAreaDefaultY;
	
	public boolean collisionOn = false;
	
	
	public BufferedImage getImage(String ImageName) {
		try {
			
			BufferedImage img = ImageIO.read(getClass().getResourceAsStream(ImageName));
			BufferedImage scaledImage = new BufferedImage(gamePanel.tileSize, gamePanel.tileSize, BufferedImage.TYPE_INT_ARGB);
			final AffineTransform at = AffineTransform.getScaleInstance((double)gamePanel.tileSize / (double)img.getWidth(), (double)gamePanel.tileSize / (double)img.getHeight());
			final AffineTransformOp ato = new AffineTransformOp(at, AffineTransformOp.TYPE_BICUBIC);
			scaledImage = ato.filter(img, scaledImage);
			return scaledImage;
			
		}catch (IOException e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public void setAction() {
	}
	
	public void update() {
		setAction();
	}
	
	public void draw(Graphics2D g2) {
		
		int screenX = worldX  - gamePanel.player.worldX + gamePanel.player.screenX;
		int screenY = worldY  - gamePanel.player.worldY + gamePanel.player.screenY;
		BufferedImage image = null;
		
		if(worldX + gamePanel.tileSize * 3 > gamePanel.player.worldX - gamePanel.player.screenX && 
		   worldX - gamePanel.tileSize * 3 < gamePanel.player.worldX + gamePanel.player.screenX &&
		   worldY + gamePanel.tileSize * 3 > gamePanel.player.worldY - gamePanel.player.screenY && 
		   worldY - gamePanel.tileSize * 3 < gamePanel.player.worldY + gamePanel.player.screenY) {
			
			switch(direction) {
			case "up":
				if(spriteNum == 1) {
					image = up1;
				} else if(spriteNum == 2) {
					image = up2;
				}
				break;
			case "down":
				if(spriteNum == 1) {
					image = down1;
				} else if(spriteNum == 2) {
					image = down2;
				}
				break;
			case "right":
				if(spriteNum == 1) {
					image = right1;
				} else if(spriteNum == 2) {
					image = right2;
				}
				break;
			case "left":
				if(spriteNum == 1) {
					image = left1;
				} else if(spriteNum == 2) {
					image = left2;
				}
				break;
			case "front":
				image = front;
				break;
			case "back":
				image = back;
		}

			g2.drawImage(image, screenX, screenY, gamePanel.tileSize, gamePanel.tileSize, null);
		}
		
	}
	
}
