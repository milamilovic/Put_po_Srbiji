package tile;

import java.awt.Graphics2D;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import javax.imageio.ImageIO;

import main.GamePanel;

public class TileManager {

	GamePanel gamePanel;
	Tile[] tiles;
	int mapTileNum[][];
	
	public TileManager(GamePanel gamePanel) {
		
		this.gamePanel = gamePanel;
		tiles = new Tile[100];
		
		mapTileNum = new int[gamePanel.columns][gamePanel.rows];
		
		this.getTileImages();
	}
	
	public void getTileImages() {
		
		try {
			
			tiles[0] = new Tile();
			tiles[0].image = ImageIO.read(getClass().getResourceAsStream("/tiles/bush(01).png"));
			tiles[1] = new Tile();
			tiles[1].image = ImageIO.read(getClass().getResourceAsStream("/tiles/bush(02).png"));
			tiles[2] = new Tile();
			tiles[2].image = ImageIO.read(getClass().getResourceAsStream("/tiles/bush(03).png"));
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	public void loadMap() {
		try {
			
			InputStream is = getClass().getResourceAsStream("/maps/examplemap.txt");
			BufferedReader br = new BufferedReader(new InputStreamReader(is));	
			
			int col = 0;
			int row = 0;
			
			while(col < gamePanel.columns && row < gamePanel.rows) {
				
				String line = br.readLine();
				
				while(col<gamePanel.columns) {
					String[] numbers = line.split(" ");
					
					int number = Integer.parseInt(numbers[col]);
					
					mapTileNum[col][row] = number;
					col++;
					
					if(col == gamePanel.columns) {
						col = 0;
						row++;
					}
				}
				br.close();
			}
			
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void draw(Graphics2D g2) {
		
		int col = 0;
		int row = 0;
		int x = 0;
		int y = 0;
		
		while(col < gamePanel.columns && row < gamePanel.rows) {
			
			int tileNum = mapTileNum[col][row];
			
			g2.drawImage(tiles[tileNum].image, x, y, gamePanel.tileSize, gamePanel.tileSize, null);
			col++;
			x += gamePanel.tileSize;
			
			if(col==gamePanel.columns) {
				col = 0;
				x = 0;
				row++;
				y += gamePanel.tileSize;
				
			}
		}
	}
	
	
}
