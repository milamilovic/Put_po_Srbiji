package main;

import entity.Entity;

public class CollisionChecker {
	
	GamePanel gamePanel;

	public CollisionChecker(GamePanel gamePanel) {
		this.gamePanel = gamePanel;
	}
	
	public void checkTile(Entity entity) {
		
		int entityLeftWorldX = entity.worldX - entity.solidArea.x;
		int entityRightWorldX = entity.worldX - entity.solidArea.x + entity.solidArea.width;
		int entityTopWorldY = entity.worldY - entity.solidArea.y;
		int entityBottomWorldY = entity.worldY - entity.solidArea.x + entity.solidArea.height;
		
		int entityLeftCol = entityLeftWorldX / gamePanel.tileSize;
		int entityRightCol = entityRightWorldX / gamePanel.tileSize;
		int entityTopRow = entityTopWorldY / gamePanel.tileSize;
		int EntityBottomRow = entityBottomWorldY / gamePanel.tileSize;
		
		int tileNum1, tileNum2;
		
		switch(entity.direction) {
		case "up": 
			entityTopRow = (entityTopWorldY - entity.speed) / gamePanel.tileSize;
			tileNum1 = gamePanel.tileManager.mapTileNum[entityLeftCol][entityTopRow];
			tileNum1 = gamePanel.tileManager.mapTileNum[entityRightCol][entityTopRow];
			break;
		case "down":
			entityTopRow = (entityTopWorldY - entity.speed) / gamePanel.tileSize;
			break;
		case "left":
			entityTopRow = (entityTopWorldY - entity.speed) / gamePanel.tileSize;
			break;
		case "right":
			entityTopRow = (entityTopWorldY - entity.speed) / gamePanel.tileSize;
			break;
		}
		
	}

}
